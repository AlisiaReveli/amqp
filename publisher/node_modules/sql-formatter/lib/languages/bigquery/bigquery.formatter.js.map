{"version":3,"file":"bigquery.formatter.js","names":["reservedCommands","expandPhrases","reservedSetOperations","reservedJoins","reservedPhrases","BigQueryFormatter","Tokenizer","reservedDependentClauses","reservedKeywords","keywords","reservedFunctionNames","functions","openParens","closeParens","stringTypes","quote","prefixes","identTypes","identChars","dashes","paramTypes","positional","named","quoted","lineCommentTypes","operators","postProcess","Formatter","tokens","detectArraySubscripts","combineParameterizedTypes","prevToken","EOF_TOKEN","map","token","text","type","TokenType","RESERVED_FUNCTION_NAME","processed","i","length","isToken","ARRAY","STRUCT","endIndex","findClosingAngleBracketIndex","typeDefTokens","slice","push","IDENTIFIER","raw","formatTypeDefToken","join","start","end","t","reduce","a","b","key","COMMA","startIndex","level"],"sources":["../../../src/languages/bigquery/bigquery.formatter.ts"],"sourcesContent":["import Formatter from 'src/formatter/Formatter';\nimport Tokenizer from 'src/lexer/Tokenizer';\nimport { EOF_TOKEN, isToken, TokenType, type Token } from 'src/lexer/token';\nimport { expandPhrases } from 'src/expandPhrases';\nimport { keywords } from './bigquery.keywords';\nimport { functions } from './bigquery.functions';\n\nconst reservedCommands = expandPhrases([\n  // Queries: https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax\n  'WITH [RECURSIVE]',\n  'SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]',\n  'FROM',\n  'WHERE',\n  'GROUP BY',\n  'HAVING',\n  'QUALIFY',\n  'WINDOW',\n  'PARTITION BY',\n  'ORDER BY',\n  'LIMIT',\n  'OFFSET',\n  'OMIT RECORD IF', // legacy\n  // Data modification: https://cloud.google.com/bigquery/docs/reference/standard-sql/dml-syntax\n  // - insert:\n  'INSERT [INTO]',\n  'VALUES',\n  // - update:\n  'UPDATE',\n  'SET',\n  // - delete:\n  'DELETE [FROM]',\n  // - truncate:\n  'TRUNCATE TABLE',\n  // - merge:\n  'MERGE [INTO]',\n  'WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]',\n  'UPDATE SET',\n  // Data definition, https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n  'CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]',\n  'CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]',\n  'DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]',\n  // - alter table:\n  'ALTER TABLE [IF EXISTS]',\n  'ADD COLUMN [IF NOT EXISTS]',\n  'DROP COLUMN [IF EXISTS]',\n  'RENAME TO',\n  'ALTER COLUMN [IF EXISTS]',\n  'SET DEFAULT COLLATE', // for alter column\n  'SET OPTIONS', // for alter column\n  'DROP NOT NULL', // for alter column\n  'SET DATA TYPE', // for alter column\n\n  'CREATE SCHEMA [IF NOT EXISTS]',\n  'DEFAULT COLLATE',\n  'CLUSTER BY',\n  'FOR SYSTEM_TIME AS OF', // CREATE SNAPSHOT TABLE\n  'WITH CONNECTION',\n  'WITH PARTITION COLUMNS',\n  'CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]',\n  'REMOTE WITH CONNECTION',\n  'RETURNS TABLE',\n  'CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]',\n  'CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]',\n  'GRANT TO',\n  'FILTER USING',\n  'CREATE CAPACITY',\n  'AS JSON',\n  'CREATE RESERVATION',\n  'CREATE ASSIGNMENT',\n  'CREATE SEARCH INDEX [IF NOT EXISTS]',\n  'ALTER SCHEMA [IF EXISTS]',\n\n  'ALTER [MATERIALIZED] VIEW [IF EXISTS]',\n  'ALTER BI_CAPACITY',\n  'DROP SCHEMA [IF EXISTS]',\n  'DROP [MATERIALIZED] VIEW [IF EXISTS]',\n  'DROP [TABLE] FUNCTION [IF EXISTS]',\n  'DROP PROCEDURE [IF EXISTS]',\n  'DROP ROW ACCESS POLICY',\n  'DROP ALL ROW ACCESS POLICIES',\n  'DROP CAPACITY [IF EXISTS]',\n  'DROP RESERVATION [IF EXISTS]',\n  'DROP ASSIGNMENT [IF EXISTS]',\n  'DROP SEARCH INDEX [IF EXISTS]',\n  'DROP [IF EXISTS]',\n  // DCL, https://cloud.google.com/bigquery/docs/reference/standard-sql/data-control-language\n  'GRANT',\n  'REVOKE',\n  // Script, https://cloud.google.com/bigquery/docs/reference/standard-sql/scripting\n  'DECLARE',\n  'EXECUTE IMMEDIATE',\n  'LOOP',\n  'END LOOP',\n  'REPEAT',\n  'END REPEAT',\n  'WHILE',\n  'END WHILE',\n  'BREAK',\n  'LEAVE',\n  'CONTINUE',\n  'ITERATE',\n  'FOR',\n  'END FOR',\n  'BEGIN',\n  'BEGIN TRANSACTION',\n  'COMMIT TRANSACTION',\n  'ROLLBACK TRANSACTION',\n  'RAISE',\n  'RETURN',\n  'CALL',\n  // Debug, https://cloud.google.com/bigquery/docs/reference/standard-sql/debugging-statements\n  'ASSERT',\n  // Other, https://cloud.google.com/bigquery/docs/reference/standard-sql/other-statements\n  'EXPORT DATA',\n]);\n\nconst reservedSetOperations = expandPhrases([\n  'UNION {ALL | DISTINCT}',\n  'EXCEPT DISTINCT',\n  'INTERSECT DISTINCT',\n]);\n\nconst reservedJoins = expandPhrases([\n  'JOIN',\n  '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n  '{INNER | CROSS} JOIN',\n]);\n\nconst reservedPhrases = [\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax#tablesample_operator\n  'TABLESAMPLE SYSTEM',\n  // From DDL: https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n  'ANY TYPE',\n  'ALL COLUMNS',\n  'NOT DETERMINISTIC',\n];\n\n// https://cloud.google.com/bigquery/docs/reference/#standard-sql-reference\nexport default class BigQueryFormatter extends Formatter {\n  static operators = ['~', '>>', '<<', '||'];\n  // TODO: handle trailing comma in select clause\n\n  tokenizer() {\n    return new Tokenizer({\n      reservedCommands,\n      reservedSetOperations,\n      reservedJoins,\n      reservedDependentClauses: ['WHEN', 'ELSE'],\n      reservedPhrases,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      openParens: ['(', '['],\n      closeParens: [')', ']'],\n      stringTypes: [\n        // The triple-quoted strings are listed first, so they get matched first.\n        // Otherwise the first two quotes of \"\"\" will get matched as an empty \"\" string.\n        { quote: '\"\"\"..\"\"\"', prefixes: ['R', 'B', 'RB', 'BR'] },\n        { quote: \"'''..'''\", prefixes: ['R', 'B', 'RB', 'BR'] },\n        { quote: '\"\"', prefixes: ['R', 'B', 'RB', 'BR'] },\n        { quote: \"''\", prefixes: ['R', 'B', 'RB', 'BR'] },\n      ],\n      identTypes: ['``'],\n      identChars: { dashes: true },\n      paramTypes: { positional: true, named: ['@'], quoted: ['@'] },\n      lineCommentTypes: ['--', '#'],\n      operators: BigQueryFormatter.operators,\n      postProcess,\n    });\n  }\n}\n\nfunction postProcess(tokens: Token[]): Token[] {\n  return detectArraySubscripts(combineParameterizedTypes(tokens));\n}\n\n// Converts OFFSET token inside array from RESERVED_COMMAND to RESERVED_FUNCTION_NAME\n// See: https://cloud.google.com/bigquery/docs/reference/standard-sql/functions-and-operators#array_subscript_operator\nfunction detectArraySubscripts(tokens: Token[]) {\n  let prevToken = EOF_TOKEN;\n  return tokens.map(token => {\n    if (token.text === 'OFFSET' && prevToken.text === '[') {\n      prevToken = token;\n      return { ...token, type: TokenType.RESERVED_FUNCTION_NAME };\n    } else {\n      prevToken = token;\n      return token;\n    }\n  });\n}\n\n// Combines multiple tokens forming a parameterized type like STRUCT<ARRAY<INT64>> into a single token\nfunction combineParameterizedTypes(tokens: Token[]) {\n  const processed: Token[] = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n\n    if ((isToken.ARRAY(token) || isToken.STRUCT(token)) && tokens[i + 1]?.text === '<') {\n      const endIndex = findClosingAngleBracketIndex(tokens, i + 1);\n      const typeDefTokens = tokens.slice(i, endIndex + 1);\n      processed.push({\n        type: TokenType.IDENTIFIER,\n        raw: typeDefTokens.map(formatTypeDefToken('raw')).join(''),\n        text: typeDefTokens.map(formatTypeDefToken('text')).join(''),\n        start: token.start,\n        end: token.end + typeDefTokens.map(t => t.text.length).reduce((a, b) => a + b),\n      });\n      i = endIndex;\n    } else {\n      processed.push(token);\n    }\n  }\n  return processed;\n}\n\nconst formatTypeDefToken =\n  (key: Extract<keyof Token, 'raw' | 'text'>) =>\n  (token: Token): string => {\n    if (token.type === TokenType.IDENTIFIER || token.type === TokenType.COMMA) {\n      return token[key] + ' ';\n    } else {\n      return token[key];\n    }\n  };\n\nfunction findClosingAngleBracketIndex(tokens: Token[], startIndex: number): number {\n  let level = 0;\n  for (let i = startIndex; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.text === '<') {\n      level++;\n    } else if (token.text === '>') {\n      level--;\n    } else if (token.text === '>>') {\n      level -= 2;\n    }\n    if (level === 0) {\n      return i;\n    }\n  }\n  return tokens.length - 1;\n}\n"],"mappings":"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"}