"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getModel = exports.setup = void 0;
const ConfigService_1 = require("./services/ConfigService");
const AmqpClient_1 = require("./services/amqp/AmqpClient");
const AmqpService_1 = require("./services/amqp/AmqpService");
const setup = async (config) => {
    const unique = 'unique_rpc_queue' in config ? config.unique_rpc_queue : true;
    const newChannel = 'new_channel' in config ? config.new_channel : undefined;
    if (config.connection) {
        const client = new AmqpClient_1.AmqpClient({ unique, newChannel }, {
            connection: config.connection,
            channel: config.channel,
        });
        await client.init();
        AmqpService_1.AmqpService.instance.setClient(client);
    }
    else if (config.amqp_client) {
        AmqpService_1.AmqpService.instance.setClient(config.amqp_client);
    }
    else {
        throw new Error('Please provide either connection or amqp_client');
    }
    if (config.insert_queue_name && config.insert_queue_name.length > 0) {
        ConfigService_1.ConfigService.instance.insertQueue = config.insert_queue_name;
    }
    if (config.insert_exchange) {
    }
    else {
    }
    if (config.upsert_options) {
        ConfigService_1.ConfigService.instance.chunkSize = config.upsert_options.chunkSize;
    }
};
exports.setup = setup;
var models_1 = require("./models");
Object.defineProperty(exports, "getModel", { enumerable: true, get: function () { return models_1.getModel; } });
//# sourceMappingURL=index.js.map