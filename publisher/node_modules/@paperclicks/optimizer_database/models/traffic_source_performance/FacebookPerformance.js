"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FacebookPerformance = exports.FacebookPerformanceCreate = void 0;
const model_decorators_1 = require("../../core/schema/model/decorators/model_decorators");
const ModelSchemaCollection_1 = require("../../core/schema/model/schema/ModelSchemaCollection");
const table_decorators_1 = require("../../core/schema/table/decorators/table_decorators");
const tables_1 = require("../../tables");
const TrafficSourcePerformanceModel_1 = require("../base/TrafficSourcePerformanceModel");
class FacebookPerformanceCreate extends TrafficSourcePerformanceModel_1.TrafficSourcePerformanceModelCreate {
    constructor(model) {
        super(model);
    }
}
exports.FacebookPerformanceCreate = FacebookPerformanceCreate;
class FacebookPerformance extends TrafficSourcePerformanceModel_1.TrafficSourcePerformanceModel {
    setValues(data) {
        const prefix = 'facebook';
        const specific_columns = ModelSchemaCollection_1.AllModelSchemas.getModel(this.constructor)
            .fields.filter((x) => x.name.startsWith(prefix))
            .map((x) => x.name)
            .reduce((acc, cur) => {
            acc.add(cur.replace(`${prefix}_`, ''));
            return acc;
        }, new Set());
        for (const [key, value] of Object.entries(data)) {
            if (specific_columns.has(key)) {
                this[`${prefix}_${key}`] = value;
            }
            else {
                this[key] = value;
            }
        }
    }
}
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_1'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_clicks", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_2'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_impressions", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_3'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_reach", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_4'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_spend", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_5'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_unique_inline_link_clicks", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_6'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_link_click_action", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_7'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_post_engagement_action", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_8'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_page_engagement_action", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_9'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_comment_action", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_10'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_post_reaction_action", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_11'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_like_action", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_12'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_mobile_app_install_action", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_13'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_lead_action", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_14'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_inline_link_clicks", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_15'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_conversions", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_16'),
    __metadata("design:type", Number)
], FacebookPerformance.prototype, "facebook_purchase_roas", void 0);
exports.FacebookPerformance = FacebookPerformance;
//# sourceMappingURL=FacebookPerformance.js.map