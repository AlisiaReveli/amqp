"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PublisherPerformance = exports.PublisherPerformanceCreate = void 0;
const model_decorators_1 = require("../../core/schema/model/decorators/model_decorators");
const table_decorators_1 = require("../../core/schema/table/decorators/table_decorators");
const tables_1 = require("../../tables");
const TrackerPerformance_1 = require("../base/TrackerPerformance");
class PublisherPerformanceCreate extends TrackerPerformance_1.TrackerPerformanceCreate {
    constructor(model) {
        super(model);
    }
}
exports.PublisherPerformanceCreate = PublisherPerformanceCreate;
class PublisherPerformance extends TrackerPerformance_1.TrackerPerformance {
}
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_1'),
    __metadata("design:type", Number)
], PublisherPerformance.prototype, "publisher_clicks", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM, is_int: true }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_2'),
    __metadata("design:type", Number)
], PublisherPerformance.prototype, "publisher_conversions", void 0);
__decorate([
    (0, model_decorators_1.Column)({ aggregate: model_decorators_1.AggregateFunction.SUM }),
    (0, table_decorators_1.ToTable)(tables_1.PerformanceTable, 'field_3'),
    __metadata("design:type", Number)
], PublisherPerformance.prototype, "publisher_revenue", void 0);
exports.PublisherPerformance = PublisherPerformance;
//# sourceMappingURL=PublisherPerformance.js.map