import { ObjectType } from '../../core/types';
import { ModelSchema } from '../../core/schema/model/schema/ModelSchema';
import { Model } from '../../models/base/Model';
import { TableFieldConflict } from './TableFieldConflict';
import { ModelFieldConflict } from './ModelFieldConflict';
export declare abstract class IntegrityChecker<T extends Model> {
    protected model: ObjectType<T>;
    protected constructor(model: ObjectType<T>);
    abstract checkIntegrity(): void;
    protected get schema(): ModelSchema;
    protected baseSchema(model?: ObjectType<Model>): ModelSchema | null;
    protected fieldConflictsWithSchema(other: ModelSchema): Array<ModelFieldConflict>;
    protected tableConflictsWithItself(): Array<TableFieldConflict>;
}
