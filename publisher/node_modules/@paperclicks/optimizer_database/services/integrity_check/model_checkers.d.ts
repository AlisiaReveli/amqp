import { IntegrityChecker } from './IntegrityChecker';
import { EntityModel } from '../../models/base/EntityModel';
import { ObjectType } from '../../core/types';
import { EntityPerformanceModel } from '../../models/base/EntityPerformanceModel';
import { TrackerPerformance } from '../../models/base/TrackerPerformance';
import { TrafficSourcePerformanceModel } from '../../models/base/TrafficSourcePerformanceModel';
export declare class EntityModelChecker<T extends EntityModel> extends IntegrityChecker<T> {
    constructor(model: ObjectType<T>);
    checkIntegrity(): void;
}
export declare class EntityPerformanceChecker<T extends EntityPerformanceModel> extends IntegrityChecker<T> {
    constructor(model: ObjectType<T>);
    checkIntegrity(): void;
}
export declare class TrackerPerformanceChecker<T extends TrackerPerformance> extends IntegrityChecker<T> {
    constructor(model: ObjectType<T>);
    checkIntegrity(): void;
}
export declare class TrafficSourcePerformanceChecker<T extends TrafficSourcePerformanceModel> extends IntegrityChecker<T> {
    constructor(model: ObjectType<T>);
    checkIntegrity(): void;
}
