declare type FnChain<I, T extends unknown[]> = T extends [infer Head, ...infer Tail] ? [(item: I) => Head, ...FnChain<I, Tail>] : [];
declare type MapChain<I, T extends unknown[]> = T extends [infer Head, ...infer Tail] ? Map<Head, MapChain<I, Tail>> : Array<I>;
export declare function groupBy<T, Keys extends unknown[]>(data: Iterable<T>, ...fns: FnChain<T, Keys>): MapChain<T, Keys>;
export {};
